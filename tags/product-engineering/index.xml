<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>product engineering on Amit Kumar</title><link>https://toamitkumar.in/tags/product-engineering/</link><description>Recent content in product engineering on Amit Kumar</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 05 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://toamitkumar.in/tags/product-engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>Platform Engineering</title><link>https://toamitkumar.in/2022/01/05/platform-engineering/</link><pubDate>Wed, 05 Jan 2022 00:00:00 +0000</pubDate><guid>https://toamitkumar.in/2022/01/05/platform-engineering/</guid><description>The third article of the series of 5 articles describing my journey to build an Engineering setup in Financial Services. Read the preface.
Building and scaling Engineering team: Principles and practices adopted to build the product and engineering team Technology choices &amp;amp; Engineering practices: We took an outward-in approach to establish the foundation of technology stack, architecture/design choices &amp;amp; engineering practices Platform Engineering: A team responsible for architecture reference, engineering tools/ practices, cross-cutting-concerns, Devops processes, playbooks.</description></item><item><title>Technology choices and Engineering practices</title><link>https://toamitkumar.in/2022/01/04/technology-choice-and-engineering-practices/</link><pubDate>Tue, 04 Jan 2022 00:00:00 +0000</pubDate><guid>https://toamitkumar.in/2022/01/04/technology-choice-and-engineering-practices/</guid><description>The second article of the series of 5 articles describing my journey to build an Engineering setup in Financial Services. Read the preface.
Building and scaling Engineering team: Principles and practices adopted to build the product and engineering team Technology choices &amp;amp; Engineering practices: We took an outward-in approach to establish the foundation of technology stack, architecture/design choices &amp;amp; engineering practices Platform Engineering:A team responsible for architecture reference, engineering tools/ practices, cross-cutting-concerns, Devops processes, playbooks.</description></item><item><title>Building &amp; scaling Engineering team</title><link>https://toamitkumar.in/2022/01/03/building-and-scaling-engineering-team/</link><pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate><guid>https://toamitkumar.in/2022/01/03/building-and-scaling-engineering-team/</guid><description>The first article of the series of 5 blog posts describing the journey to build an Engineering setup in Financial Services. Read the preface to get a clear context of the journey.
Building and scaling Engineering team: Principles and practices adopted to build the product and engineering team Technology choices &amp;amp; Engineering practices: We took an outward-in approach to establish the foundation of technology stack, architecture/ design choices &amp;amp; engineering practices Platform Engineering: A team responsible for architecture reference, engineering tools/ practices, cross-cutting-concerns, Devops processes, playbooks.</description></item><item><title>Building an Engineering setup for a Financial Service Instituition</title><link>https://toamitkumar.in/2022/01/02/building-engineering-setup-financial-services/</link><pubDate>Sun, 02 Jan 2022 00:00:00 +0000</pubDate><guid>https://toamitkumar.in/2022/01/02/building-engineering-setup-financial-services/</guid><description>I have been part of building Product &amp;amp; Engineering teams and Digital Transformation setup for almost more than a decade.
My first experience was during the build of MDL (McKinsey Digital Labs) by our leaders: Satty Bhens and Biju Bhaskar - a startup like setup (for both engineering and business building) inside a large organisation. Both strongly believe to ring-fence a garage-like setup and gave full support to establish guard-rails in protecting the culture of working like a startup.</description></item><item><title>Re-Engineer v/s Rewrite</title><link>https://toamitkumar.in/2021/11/24/reengineer-vs-rewrite/</link><pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate><guid>https://toamitkumar.in/2021/11/24/reengineer-vs-rewrite/</guid><description>We are engineers (can be safely generalised to humans), who at heart enjoy building not extending/enhancing/improving
Disclaimer: doesn&amp;rsquo;t mean we don&amp;rsquo;t enjoy extending/enhancing. I strongly believe in the philosophy of &amp;ndash; You touch it, you improve it!
This is driven by the fact - programmers think old code is messy as Joel Spolsky writes &amp;ndash; It’s harder to read code than to write it
Having said that, programmers use tonne of external libraries &amp;amp; modules to avoid re-inventing the wheel.</description></item><item><title>Guardrail-ed Autonomy</title><link>https://toamitkumar.in/2021/01/30/guardrail-ed-autonomy/</link><pubDate>Sat, 30 Jan 2021 00:00:00 +0000</pubDate><guid>https://toamitkumar.in/2021/01/30/guardrail-ed-autonomy/</guid><description>I haven’t written much in recent years, at least not through blog posts. I thought 2021, would be a good time to start penning some of my thoughts &amp;amp; learnings I have had in the recent past years.
Team formation, functioning, reporting are the most common challenges every organisation have. Lately, I have been involved in discussions related to Team Autonomy. Hence, this article.
Autonomy has different meaning based on context: political, medical, HR, organisation.</description></item><item><title>Agility and Component Driven Development</title><link>https://toamitkumar.in/2012/05/30/guardrail-ed-autonomy/</link><pubDate>Wed, 30 May 2012 00:00:00 +0000</pubDate><guid>https://toamitkumar.in/2012/05/30/guardrail-ed-autonomy/</guid><description>Agile development has become the backbone of modern software development process. In a nutshell, it can be defined as - iterative, self-evolving incremental development that demands high collaboration and flexibility to change. Component driven development on the other hand augments to building reusable and testable components that be plugged together to form application foundation for delivering business functionality.
In our current engagement with Firm Account, they have started providing IT tools/solutions to their clients supplementing the strategic solutions they have been providing so far.</description></item></channel></rss>